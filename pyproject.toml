[project]
name = "symbolite"
description = "A minimalistic symbolic package."
dynamic = ["version"]
authors = [
  { name = "HernÃ¡n E. Grecco", email = "hernan.grecco@gmail.com" },
  { name = "Mauro Silberberg", email = "maurosilber@gmail.com" },
]
readme = { file = "README.md", content-type = "text/markdown" }
license = { text = "MIT" }
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries",
]
keywords = ["symbolic"]
requires-python = ">=3.10"
dependencies = ["typing_extensions"]

[project.urls]
Homepage = "https://github.com/hgrecco/symbolite"
Issues = "https://github.com/hgrecco/symbolite/issues"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[tool.hatch.version]
source = "vcs"

[tool.uv]
cache-keys = [{ file = "pyproject.toml" }, { git = true }]

[tool.pytest.ini_options]
addopts = "--import-mode=importlib --doctest-modules"
pythonpath = "."
testpaths = ["symbolite/testsuite"]
doctest_optionflags = "NUMBER"
filterwarnings = "ignore:No libsl provided, defaulting to Python standard library."

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = ["I"]

[tool.pixi.project]
channels = ["https://fast.prefix.dev/conda-forge"]
platforms = ["osx-arm64", "linux-64"]

[tool.pixi.environments]
dev = { features = ["test", "backends", "dev"], solve-group = "default" }
lint = { features = ["lint"], no-default-feature = true }
build = { features = ["build"], no-default-feature = true }
test = { features = ["test", "backends"], solve-group = "default" }
test-py310 = ["test", "py310"]
test-py311 = ["test", "py311"]
test-py312 = ["test", "py312"]
test-py313 = ["test", "py313"]

[tool.pixi.feature.dev.dependencies]
jupyter = "*"

[tool.pixi.feature.backends.dependencies]
numpy = "*"
jax = "*"
sympy = "*"

[tool.pixi.feature.lint.dependencies]
pre-commit = "*"
pre-commit-hooks = "*"
taplo = "*"
ruff = "*"
mdformat = "*"
mdformat-ruff = "*"

[tool.pixi.feature.lint.tasks]
pre-commit-install = "pre-commit install"
lint = "pre-commit run"

[tool.pixi.feature.build.dependencies]
uv = "*"

[tool.pixi.feature.build.tasks]
build = "uv build"
publish = "uv publish"

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-mypy-testing = "*"

[tool.pixi.feature.test.tasks]
test = "pytest --doctest-modules"

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"
